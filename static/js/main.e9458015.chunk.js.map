{"version":3,"sources":["NavBar.jsx","Algorithms/sortAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","SearchingVisualizer/SearchingVisualizer.jsx","Algorithms/searchAlgorithms.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","state","disabled","className","exact","activeClassName","to","this","React","Component","getQuickSortAnimation","array","quickSort","left","right","animation","index","length","pivotIdx","Math","floor","pivot","i","j","push","temp","partition","getMergeSortAnimations","animations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","k","doMerge","SortingVisualizer","mount","resetArray","arr","maxWidth","document","getElementsByClassName","offsetWidth","randomIntFromInterval","setState","buttonStyles","style","color","speedF","setTimeout","arrayBars","backgroundColor","boxShadow","enableButtons","postAnimation","barOneIndex","barTwoIndex","barOneStyle","barTwoStyle","pop","tempHeight","height","disableButtons","getBubbleSortAnimation","animationHelper","getInsertionSortAnimation","minIdx","getSelectionSortAnimation","barOneIdx","barTwoIdx","newHeight","leftBar","rightBar","pivotStyle","leftBarStyle","rightBarStyle","onClick","bubbleSort","insertionSort","selectionSort","mergeSort","map","value","idx","key","min","max","abs","random","SearchVisualizer","animatonLength","sort","a","b","inputFieldStyle","getElementsByTagName","arrayElements","mid","console","log","getBinarySearchAnimation","parseInt","isEquall","partialArrayStyle","midStyle","forEach","getInputAlert","getLinerSearchAnimation","eleIdx","eleStyle","jump","prev","getJumpSearchAnimation","e","target","type","placeholder","onChange","inputRead","bind","linerSearch","binaySearch","jumpSearch","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e9458015.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\n\r\nexport default class NavBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: false,\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"nav-bar\">\r\n                    <div>ALGO-VISUALIZER</div>\r\n                    <NavLink exact className=\"nav-link\" activeClassName='active-link' to={!this.state.disabled ? '/' : \"\"}>Searching</NavLink>\r\n                    <NavLink exact className=\"nav-link\" activeClassName='active-link' to={!this.state.disabled ? '/sortingvisualizer' : \"\"}> Sorting</NavLink>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","\r\n\r\n//  BUBBLE SORT ANIMATION GENERATOR........\r\n\r\nexport function getBubbleSortAnimation(array) {\r\n  let animation = [];\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < array.length - i - 1; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        let temp = array[j];\r\n        animation.push([j, j + 1]);\r\n        animation.push([j, j + 1]);\r\n        array[j] = array[j + 1];\r\n        array[j + 1] = temp;\r\n      }\r\n    }\r\n  }\r\n  return animation;\r\n}\r\n// ============================================================================================\r\n\r\n\r\n// INSERTION SORT ANIMATION GENERATOR..... \r\n\r\nexport function getInsertionSortAnimation(array) {\r\n  let animation = [];\r\n  for (let i = 1; i < array.length; i++) {\r\n    let j = i - 1;\r\n    let temp = array[i];\r\n    while (temp < array[j] && j >= 0) {\r\n      array[j + 1] = array[j];\r\n      animation.push([j + 1, j]);\r\n      animation.push([j + 1, j]);\r\n      j--;\r\n    }\r\n\r\n    array[j + 1] = temp;\r\n  }\r\n  return animation;\r\n}\r\n\r\n//========================================================================\r\n\r\n// SELECTION SORT ANIMATION GENERATOR..... \r\n\r\nexport function getSelectionSortAnimation(array) {\r\n  let animation = [];\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    let minIdx = i;\r\n    for (let j = i + 1; j < array.length; j++) {\r\n      if (array[j] < array[minIdx]) {\r\n        minIdx = j;\r\n      }\r\n    }\r\n    animation.push([i, minIdx]);\r\n    animation.push([i, minIdx]);\r\n    let temp = array[minIdx];\r\n    array[minIdx] = array[i];\r\n    array[i] = temp;\r\n  }\r\n  return animation;\r\n}\r\n\r\n//=======================================================================\r\n\r\n// QUICK SORT ANIMATION GENERATOR..... \r\n\r\nexport function getQuickSortAnimation(array) {\r\n  let animation = [];\r\n  return quickSort(array, 0, array.length - 1, animation);\r\n  \r\n}\r\n\r\nfunction quickSort(array, left, right , animation) {\r\n  let index;\r\n  if (array.length > 1) {\r\n    index = partition(array, left, right, animation);\r\n\r\n    if (left < index - 1) {\r\n      quickSort(array, left, index - 1 , animation);\r\n    }\r\n\r\n    if (index < right) {\r\n      quickSort(array, index, right, animation);\r\n    }\r\n  }\r\n   return animation;\r\n}\r\n\r\nfunction partition(array, left, right, animation) {\r\n  let pivotIdx = Math.floor((left + right) / 2);\r\n  let pivot = array[pivotIdx] , i = left, j = right;\r\n  while (i <= j) {\r\n    while (array[i] < pivot) \r\n      i++;\r\n\r\n    while (array[j] > pivot)\r\n      j--;\r\n\r\n    if (i <= j) {\r\n      animation.push([pivotIdx, i, j]);\r\n      animation.push([pivotIdx, i, j]);\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n      i++;\r\n      j--;\r\n    }\r\n  }\r\n  return i;\r\n}\r\n\r\n//======================================================================\r\n\r\n\r\n// MERGE SORT ANIMATION GENERATOR..... \r\n\r\nexport function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n\r\n// =============================================================================","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport { getBubbleSortAnimation, getInsertionSortAnimation, getSelectionSortAnimation, getMergeSortAnimations, getQuickSortAnimation } from '../Algorithms/sortAlgorithms.js';\r\n\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            disabled: false,\r\n            mount:true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n\r\n//===================GENERATRE NEW SET OF ELEMENTS=========================//\r\n    resetArray() {\r\n        const arr = [];\r\n        const maxWidth = document.getElementsByClassName(\"bar-section\")[0].offsetWidth;\r\n        for (let i = 0; i < (maxWidth / 5) - 1; i++) {\r\n            arr.push(randomIntFromInterval(10, 560));\r\n        }\r\n        this.setState({ array: arr });\r\n    }\r\n\r\n//==========================DISABLE/ENABLE===============================//\r\n    disableButtons() {\r\n        this.setState({ disabled: true });\r\n        const buttonStyles = document.getElementsByClassName(\"button\");\r\n        for (let values of buttonStyles) {\r\n            values.style.color = \"#ff0000c2\";\r\n        }\r\n    }\r\n\r\n    enableButtons() {\r\n        const buttonStyles = document.getElementsByClassName(\"button\");\r\n        for (let i = 0; i < buttonStyles.length; i++) {\r\n            buttonStyles[i].style.color = i === 0 ? \"#f5f4f4\" : \"#4286f4\";\r\n        }\r\n        this.setState({ disabled: false });\r\n    }\r\n\r\n\r\n// ===============================POST ANIMATION EFFECT=======================//    \r\n    postAnimation(length, speedF) {\r\n        setTimeout(() => {\r\n            const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n            for (let i = 0; i < this.state.array.length; i++) {\r\n                setTimeout(() => {\r\n                    arrayBars[i].style.backgroundColor = \"green\";\r\n                    document.getElementsByClassName(\"bar-section\")[0].style.boxShadow = \"inset 0px 5px 6px 7px green\";\r\n                }, i * 10);\r\n            }\r\n\r\n            setTimeout(() => {\r\n                for (let i = 0; i < this.state.array.length; i++) {\r\n                    arrayBars[i].style.backgroundColor = \"#20232a\";\r\n                }\r\n                document.getElementsByClassName(\"bar-section\")[0].style.boxShadow = \"inset 0px 5px 6px 7px #20232a\";\r\n                this.enableButtons();\r\n            }, (this.state.array.length * 10) + 1000);\r\n        }, (length + 1) * speedF + 1000);\r\n    }\r\n\r\n// ============================ANIMATION HELPER TO SWAP THE ELEMENTS===============//\r\n\r\n    animationHelper(animations, speedF) {\r\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n\r\n        this.postAnimation(animations.length, speedF);\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [barOneIndex, barTwoIndex] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIndex].style;\r\n            const barTwoStyle = arrayBars[barTwoIndex].style;\r\n            if (i % 2 === 0) {\r\n                setTimeout(() => {\r\n                    animations.pop();\r\n                    barOneStyle.backgroundColor = \"yellowgreen\";\r\n                    barTwoStyle.backgroundColor = \"yellowgreen\";\r\n                    let tempHeight = barOneStyle.height;\r\n                    barOneStyle.height = barTwoStyle.height;\r\n                    barTwoStyle.height = tempHeight;\r\n                }, (i + 1) * speedF);\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    animations.pop();\r\n                    barOneStyle.backgroundColor = \"#20232a\";\r\n                    barTwoStyle.backgroundColor = \"#20232a\";\r\n                }, (i + 1) * speedF);\r\n            }\r\n        }\r\n    }\r\n\r\n//=================BUBBLE SORT STARTS===========================//\r\n\r\n    bubbleSort() {\r\n        this.disableButtons();\r\n        setTimeout(() => {\r\n            const animations = getBubbleSortAnimation(this.state.array);\r\n            this.animationHelper(animations, 3);\r\n        }, 500);\r\n    }\r\n\r\n\r\n//=================INSERTION SORT STARTS===========================//\r\n\r\n    insertionSort() {\r\n        this.disableButtons();\r\n        setTimeout(() => {\r\n            const animations = getInsertionSortAnimation(this.state.array);\r\n            this.animationHelper(animations, 6);\r\n        }, 500);\r\n    }\r\n\r\n//===============================SELECTION SORT STARTS===========================//\r\n    selectionSort() {\r\n        this.disableButtons();\r\n        setTimeout(() => {\r\n            const animations = getSelectionSortAnimation(this.state.array);\r\n            this.animationHelper(animations, 50);\r\n        }, 500);\r\n    }\r\n\r\n\r\n//==============================MERGE SORT STARTS=====================================//\r\n    mergeSort() {\r\n        this.disableButtons();\r\n        setTimeout(() => {\r\n            const animations = getMergeSortAnimations(this.state.array);\r\n            for (let i = 0; i < animations.length; i++) {\r\n                const arrayBars = document.getElementsByClassName('array-bar');\r\n                const isColorChange = i % 3 !== 2;\r\n                if (isColorChange) {\r\n                    const [barOneIdx, barTwoIdx] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                    const color = i % 3 === 0 ? \"yellow\" : \"#20232a\";\r\n                    setTimeout(() => {\r\n                        barOneStyle.backgroundColor = color;\r\n                        barTwoStyle.backgroundColor = color;\r\n                    }, (i + 1) * 3);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        const [barOneIdx, newHeight] = animations[i];\r\n                        const barOneStyle = arrayBars[barOneIdx].style;\r\n                        barOneStyle.height = `${newHeight}px`;\r\n\r\n                    }, (i + 1) * 3);\r\n                }\r\n            }\r\n            this.postAnimation(animations.length,3);\r\n        }, 500);\r\n    }\r\n\r\n\r\n//=================================QUICK SORT STARTS===========================//    \r\n    quickSort(array) {\r\n        this.disableButtons();\r\n        setTimeout(() => {\r\n            const animations = getQuickSortAnimation(this.state.array);\r\n            const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n            for (let i = 0; i < animations.length; i++) {\r\n                const [pivot, leftBar, rightBar] = animations[i];\r\n                const pivotStyle = arrayBars[pivot].style;\r\n                const leftBarStyle = arrayBars[leftBar].style;\r\n                const rightBarStyle = arrayBars[rightBar].style;\r\n                if (i % 2 === 0) {\r\n                    setTimeout(() => {\r\n                        pivotStyle.backgroundColor = \"yellow\";\r\n                        leftBarStyle.backgroundColor = \"red\";\r\n                        rightBarStyle.backgroundColor = \"red\";\r\n                        let temp = leftBarStyle.height;\r\n                        leftBarStyle.height = rightBarStyle.height;\r\n                        rightBarStyle.height = temp;\r\n                    }, i * 20);\r\n                }\r\n                else {\r\n                    setTimeout(() => {\r\n                        pivotStyle.backgroundColor = \"#20232a\";\r\n                        leftBarStyle.backgroundColor = \"#20232a\";\r\n                        rightBarStyle.backgroundColor = \"#20232a\";\r\n                    }, i * 20);\r\n                }\r\n            }\r\n            this.postAnimation(animations.length, 20);\r\n        }, 500);\r\n    }\r\n\r\n//=======================SORT FUNCTIONS ENDS=======================//\r\n\r\n\r\n    render() {\r\n        const { array } = this.state;\r\n        return (\r\n            <div className=\"array-container\">\r\n                <div className=\"side-bar\">\r\n                    <div className=\"button-grp\">\r\n                        <div className=\"button\" onClick={() => !this.state.disabled ? this.resetArray() : \"\"}> Randomize </div>\r\n                        <div className=\"button\" onClick={() => !this.state.disabled ? this.bubbleSort() : \"\"}> Bubble Sort </div>\r\n                        <div className=\"button\" onClick={() => !this.state.disabled ? this.insertionSort() : \"\"}> Insertion Sort </div>\r\n                        <div className=\"button\" onClick={() => !this.state.disabled ? this.selectionSort() : \"\"}> Selection Sort </div>\r\n                        <div className=\"button\" onClick={() => !this.state.disabled ? this.mergeSort() : \"\"}> Merg Sort </div>\r\n                        <div className=\"button\" onClick={() => !this.state.disabled ? this.quickSort() : \"\"}> Quick Sort </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bar-section\">\r\n                    {array.map((value, idx) => (\r\n                        <div className=\"array-bar\" key={idx} style={{ height: `${value}px` }}>.</div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport function randomIntFromInterval(min, max) {\r\n    return Math.abs(Math.floor(Math.random() * (max - min + 1) - min));\r\n}","import React from 'react';\r\nimport { randomIntFromInterval } from '../SortingVisualizer/SortingVisualizer';\r\nimport { getLinerSearchAnimation, getBinarySearchAnimation, getJumpSearchAnimation } from '../Algorithms/searchAlgorithms';\r\nimport './SearchingVisualizer.css';\r\n\r\n\r\nexport default class SearchVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            key: [],\r\n            disabled: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n\r\n    //===============================DISABLE/ENABLE=========================================//\r\n\r\n    disableButtons() {\r\n        this.setState({ disabled: true });\r\n        const buttonStyles = document.getElementsByClassName(\"button\");\r\n        for (let value of buttonStyles) {\r\n            value.style.color = \"red\";\r\n        }\r\n    }\r\n\r\n    enableButtons(animatonLength) {\r\n        setTimeout(() => {\r\n            const buttonStyles = document.getElementsByClassName(\"button\");\r\n            for (let i = 0; i < buttonStyles.length; i++) {\r\n                buttonStyles[i].style.color = i === 0 ? \"white\" : \"#223f6e\";\r\n            }\r\n            this.setState({ disabled: false });\r\n        }, (animatonLength * 1000) + 3000);\r\n    }\r\n    //==========================GENERATE NEW SET OF ELEMENTS==================================//\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i < 12; i++) {\r\n            array.push(randomIntFromInterval(10, 200));\r\n        }\r\n        array.sort((a, b) => a - b);\r\n        this.setState({ array });\r\n    }\r\n\r\n    getInputAlert() {\r\n        const inputFieldStyle = document.getElementsByTagName(\"input\")[0].style;\r\n        inputFieldStyle.boxShadow = \" 1px 1px 5px 1px red\";\r\n        setTimeout(() => inputFieldStyle.boxShadow = \"none\", 100);\r\n    }\r\n\r\n    //==========================BINARY SEARCH STARTS=========================================//\r\n\r\n\r\n    binaySearch() {\r\n\r\n        //=============================CHECK FOR THE PRESENCE OF THE KEY=================//\r\n        if (!this.state.key.length) {\r\n            this.getInputAlert();\r\n            return;\r\n        }\r\n\r\n        this.disableButtons();\r\n        const arrayElements = document.getElementsByClassName(\"array-elements\");\r\n        const animations = getBinarySearchAnimation(this.state.array, parseInt(this.state.key));\r\n        this.enableButtons(animations.length);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            //iterating for each animation ...\r\n            const [mid, isEquall, left, right] = animations[i];\r\n            const partialArrayStyle = [];\r\n            //partialArrayStyle holds the elements index that may contain the key element....\r\n            for (let i = left; i <= right; i++) {\r\n                partialArrayStyle.push(arrayElements[i].style);\r\n            }\r\n            const midStyle = arrayElements[mid].style;\r\n            //first time we change the color of the array elements(DOM) that need to be checked for the presence of the KEY element....\r\n            if (i % 2 === 0) {\r\n                setTimeout(() => {\r\n                    partialArrayStyle.forEach((value) => {\r\n                        value.backgroundColor = \"#ff0000ad\";\r\n                    });\r\n                    midStyle.backgroundColor = isEquall ? \"#576115b3\" : \"#00FF00\";\r\n                    if (isEquall)\r\n                        setTimeout(() => midStyle.backgroundColor = \"#dbf3fa\", 3000);\r\n                }, i * 1500);\r\n            }\r\n            // second time to retrive the color back to normal.....\r\n            else {\r\n                setTimeout(() => {\r\n                    partialArrayStyle.forEach((value) => {\r\n                        value.backgroundColor = \"#dbf3fa\";\r\n                    });\r\n                    midStyle.backgroundColor = \"#dbf3fa\";\r\n                }, i * 1500);\r\n            }\r\n        }\r\n    }\r\n\r\n    //==============================BINARY SEARCH ENDS========================================//\r\n\r\n\r\n    //==============================LINEAR SEARCH STARTS======================================//\r\n\r\n    linerSearch() {\r\n\r\n        //================Check for the presence of the key======================//\r\n        if (!this.state.key.length) {\r\n            this.getInputAlert();\r\n            return;\r\n        }\r\n\r\n        this.disableButtons();\r\n        const animations = getLinerSearchAnimation(this.state.array, parseInt(this.state.key));\r\n        this.enableButtons(animations.length);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [eleIdx, isEquall] = animations[i];\r\n            const eleStyle = document.getElementsByClassName(\"array-elements\")[eleIdx].style;\r\n\r\n            if (i % 2 === 0) {\r\n                // Change the color of the array elements during the comparision.=======\r\n                setTimeout(() => {\r\n                    eleStyle.backgroundColor = isEquall ? \"#576115b3\" : \"#00FF00\";\r\n                    if (isEquall)\r\n                        setTimeout(() => eleStyle.backgroundColor = \"#dbf3fa\", 3000);\r\n                }, i * 1000);\r\n            }\r\n            else {\r\n                // Retrieve the original color of the elements=====================\r\n                setTimeout(() => {\r\n                    eleStyle.backgroundColor = \"#dbf3fa\";\r\n                }, i * 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    //==============================LINEAR SEARCH ENDS====================================// \r\n\r\n\r\n\r\n\r\n    //===============================JUMP SEARCH BEGINS================================//\r\n\r\n    jumpSearch() {\r\n        // check for the presence of the key...........................\r\n        if (!this.state.key.length) {\r\n            this.getInputAlert();\r\n            return;\r\n        }\r\n\r\n        \r\n        this.disableButtons();\r\n        const arrayElements = document.getElementsByClassName(\"array-elements\");\r\n        const animations = getJumpSearchAnimation(this.state.array, parseInt(this.state.key));\r\n        this.enableButtons(animations.length);\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [left, right, isEquall] = animations[i];\r\n            const partialArrayStyle = [];\r\n            for (let i = left; i <= right; i++) {\r\n                partialArrayStyle.push(arrayElements[i].style);\r\n            }\r\n\r\n            if (i % 2 === 0) {\r\n                setTimeout(() => {\r\n                    if (isEquall) {\r\n                        partialArrayStyle[0].backgroundColor = \"#576115b3\";\r\n                        setTimeout(() => {\r\n                            partialArrayStyle[0].backgroundColor = \"#dbf3fa\";\r\n                        },3000);\r\n                    }\r\n                    else {\r\n                        partialArrayStyle.forEach(value => {\r\n                            value.backgroundColor = \"#ff0000ad\";\r\n                        });\r\n                        partialArrayStyle[partialArrayStyle.length-1].backgroundColor = \"lime\";\r\n                    }\r\n                }, i * 1500);\r\n            }\r\n            else{\r\n                setTimeout(() => {\r\n                    partialArrayStyle.forEach((value) => {\r\n                        value.backgroundColor = \"#dbf3fa\";\r\n                    });\r\n                }, i * 1500);\r\n            }\r\n        }\r\n    }\r\n\r\n// =================================JUMP SEARCH ENDS==================================//\r\n\r\n    inputRead(e) {\r\n        this.setState({ key: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <div disabled={this.state.disabled} className=\"button shadow1 reset-button\" onClick={() => !this.state.disabled ? this.resetArray() : \"\"}>Reset</div>\r\n                <div className=\"array-section shadow2\">\r\n                    {this.state.array.map((value, idx) => (\r\n                        <div className=\"array-elements shadow1\" key={idx}>{value}</div>\r\n                    ))\r\n                    }\r\n                </div>\r\n                <div className=\"bottom-tool-bar\">\r\n                    <input type=\"number\" className=\"\" value={this.state.key} placeholder=\"Enter key to be searched\" onChange={this.inputRead.bind(this)} />\r\n                    <div className=\"search-buttons\">\r\n                        <div className=\"button shadow1\" onClick={() => !this.state.disabled ? this.linerSearch() : \"\"}>Linear Search</div>\r\n                        <div className=\"button shadow1\" onClick={() => !this.state.disabled ? this.binaySearch() : \"\"}>Binary Search</div>\r\n                        <div className=\"button shadow1\" onClick={() => !this.state.disabled ? this.jumpSearch() : \"\"}>Jump Search</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","\r\n//========================LINEAR SEARCH ANIMATOIN GENERATOR=======================//\r\n\r\nexport function getLinerSearchAnimation(array, key){\r\n    let animation = [];\r\n    for(let i = 0; i < array.length; i++){\r\n        animation.push([i, false]);\r\n        animation.push([i, false]);\r\n        if(array[i] === key){\r\n            animation.push([i, true]);\r\n            break;\r\n        }\r\n    }\r\n    return animation;\r\n}\r\n\r\n//============================BINARY SEARCH ANIMATION GENERATOR===================//\r\n\r\nexport function getBinarySearchAnimation(array, key){\r\n    let animation = [];\r\n    let left = 0;\r\n    let right = array.length-1;\r\n    let mid = Math.floor((left+right) / 2);\r\n    while(left <= right){\r\n        mid = Math.floor((left+right) / 2);\r\n        animation.push([mid, false, left, right]);\r\n        animation.push([mid, false, left, right]);\r\n        if(array[mid] === key){\r\n            animation.push([mid, true, mid, mid]);\r\n            console.log(mid);\r\n            break;\r\n        }\r\n        else if(array[mid] > key){\r\n            right = mid - 1;\r\n        }\r\n        else{\r\n            left = mid + 1;\r\n        }\r\n    }\r\n    return animation;\r\n}\r\n\r\n// ============================JUMP SEARCH ANIMATION GENERATOR===================//\r\n\r\nexport function getJumpSearchAnimation(array, key){\r\n    const animation = [];\r\n    let jump = 3;\r\n    let prev = 0;\r\n    // here 12 is the size of the array......(static)......\r\n    while(array[Math.min(jump, 12) - 1] < key){\r\n        animation.push([prev, jump-1,false]);\r\n        animation.push([prev, jump-1,false]);\r\n        prev = jump;\r\n        jump += 3;\r\n        if(prev >= 12)\r\n            return animation;\r\n    }\r\n\r\n    while(array[prev] < key){\r\n        animation.push([prev,prev, false]);\r\n        animation.push([prev,prev, false]);\r\n        prev++;\r\n        if(prev === Math.min(jump, 12))\r\n            return animation;\r\n    }\r\n    if(array[prev] === key){\r\n        animation.push([prev, prev, true]);\r\n         return animation;\r\n    }\r\n    else{\r\n        animation.push([prev, prev, false]);\r\n        animation.push([prev, prev, false]);\r\n    }\r\n    return animation;\r\n}","import React from 'react';\nimport './App.css';\nimport NavBar from './NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport SearchVisualizer from './SearchingVisualizer/SearchingVisualizer';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n     <NavBar />\n      <Switch>\n        <Route exact path = '/' component={SearchVisualizer} />\n        <Route exact path = '/sortingvisualizer' component={SortingVisualizer} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}